{
    "sourceFile": "controllers/newsController.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1640347718942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1640347728889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n const { Entry } = require('../models');\n \n module.exports = {\n-  index: function async (req, res) {\n+  index: async (req, res) {\n     Entry.findAll({\n       attributes: ['id', 'name', 'image', 'createdAt', 'updatedAt'],\n       where: {\n         type: 'news',\n"
                },
                {
                    "date": 1640347734135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n const { Entry } = require('../models');\n \n module.exports = {\n-  index: async (req, res) {\n+  index: async (req, res) =< {\n     Entry.findAll({\n       attributes: ['id', 'name', 'image', 'createdAt', 'updatedAt'],\n       where: {\n         type: 'news',\n"
                },
                {
                    "date": 1640347739503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n const { Entry } = require('../models');\n \n module.exports = {\n-  index: async (req, res) =< {\n-    Entry.findAll({\n+  index: async (req, res) => {\n+    await Entry.findAll({\n       attributes: ['id', 'name', 'image', 'createdAt', 'updatedAt'],\n       where: {\n         type: 'news',\n       },\n"
                }
            ],
            "date": 1640347718942,
            "name": "Commit-0",
            "content": "const { Entry } = require('../models');\n\nmodule.exports = {\n  index: function async (req, res) {\n    Entry.findAll({\n      attributes: ['id', 'name', 'image', 'createdAt', 'updatedAt'],\n      where: {\n        type: 'news',\n      },\n    })\n      .then((entries) => res.json(entries))\n      .catch((err) => {\n        console.log(err);\n        res.sendStatus(500);\n      });\n  },\n  create: function (req, res, next) {\n    const { name, content, categoryId } = req.body;\n    const newEntry = {\n      name,\n      content,\n      image: req.file.location,\n      type: 'news',\n      categoryId,\n    };\n\n    Entry.create(newEntry)\n      .then((createdEntry) => {\n        res.json(createdEntry);\n      })\n      .catch((err) => {\n        console.log(err);\n        res.sendStatus(500);\n      });\n  },\n  details: (req, res) => {\n    const { id } = req.params;\n    Entry.findByPk(id)\n      .then((newsDetails) => {\n        if (newsDetails) {\n          res.json(newsDetails);\n        } else {\n          res.sendStatus(404);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        res.sendStatus(500);\n      });\n  },\n  delete: async (req, res) => {\n    const { id } = req.params;\n    try {\n      const entry = await Entry.findOne({ where: { id } });\n      if (entry) {\n        await entry.destroy();\n        res.sendStatus(200);\n      } else {\n        res.sendStatus(404);\n      }\n    } catch (err) {\n      console.error(err);\n      res.sendStatus(500);\n    }\n  },\n  update: async (req, res) => {\n    const { id } = req.params;\n\n    try {\n      const existingEntry = await Entry.findByPk(id);\n\n      if (!existingEntry) {\n        return res.status(404).json({\n          error: 'Entry not found',\n        });\n      }\n\n      const { name, type, categoryId } = req.body;\n\n      if (name) existingEntry.name = name;\n      if (type) existingEntry.type = type;\n      if (categoryId) existingEntry.categoryId = categoryId;\n      if (req.file?.location) existingEntry.image = req.file.location;\n\n      await existingEntry.save();\n\n      res.status(200).json(existingEntry);\n    } catch (error) {\n      console.log(error);\n      res.sendStatus(500);\n    }\n  },\n};\n"
        }
    ]
}